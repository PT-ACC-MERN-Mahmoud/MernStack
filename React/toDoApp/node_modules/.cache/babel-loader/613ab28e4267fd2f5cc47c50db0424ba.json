{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Program0907\\\\OneDrive\\\\Desktop\\\\Coding Dojo\\\\MernStack\\\\React\\\\toDoApp\\\\react-todoapp\\\\src\\\\components\\\\ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDo from './ToDo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = props => {\n  _s();\n\n  const [todos, setTodos] = useState([]); //storing input to state\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      //Validating input is not blank\n      return;\n    }\n\n    const newTodos = [todo, ...todos]; //creating an empty array for newtodos\n  };\n\n  const updateTodos = (todoId, newValue) => {\n    if (!todos.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const removeToDo = id => {\n      const removeArr = [...todos].filter(todo => todo.id !== id);\n      setTodos(removeArr);\n    };\n\n    setTodos(newTodos);\n    console.log(todos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = ToDo.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" What 's the Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: ToDo,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","ToDoForm","ToDo","ToDoList","props","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodos","todoId","newValue","removeToDo","id","removeArr","filter","console","log","completeTodo","updatedTodos","map","isComplete","removeTodo"],"sources":["C:/Users/Program0907/OneDrive/Desktop/Coding Dojo/MernStack/React/toDoApp/react-todoapp/src/components/ToDoList.js"],"sourcesContent":["import React, {\r\n    useState\r\n} from 'react';\r\nimport ToDoForm from './ToDoForm';\r\nimport ToDo from './ToDo';\r\n\r\n\r\nconst ToDoList = (props) => {\r\n    const [todos, setTodos] = useState([]) //storing input to state\r\n\r\nconst addTodo = todo => {\r\n    if (!todo.text || /^\\s*$/.test(todo.text)) { //Validating input is not blank\r\n        return;\r\n    }\r\n\r\n    const newTodos = [todo, ...todos]; //creating an empty array for newtodos\r\n    };\r\n\r\nconst updateTodos = (todoId, newValue) => {\r\n    if(!todos.text || /^\\s*$/.test(todo.text)) {\r\n        return;\r\n}  \r\nconst removeToDo = id => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n        setTodos(removeArr);\r\n\r\n    };\r\n\r\n    \r\n        setTodos(newTodos);\r\n        console.log(todos)\r\n    };\r\nconst completeTodo = id => {\r\n    let updatedTodos = ToDo.map(todo => {\r\n        if (todo.id === id) {\r\n            todo.isComplete = !todo.isComplete;\r\n        }\r\n        return todo;\r\n    });\r\n        setTodos(updatedTodos);\r\n    \r\n};  \r\n    return ( \r\n        <div>\r\n            <h1> What 's the Plan for Today?</h1>\r\n            <ToDoForm onSubmit= {addTodo}/> \r\n            <ToDo todos={ToDo} completeTodo={completeTodo} removeTodo=\r\n            {removeTodo} />    \r\n        </div>\r\n    );\r\n}\r\nexport default ToDoList;"],"mappings":";;;AAAA,OAAOA,KAAP,IACIC,QADJ,QAEO,OAFP;AAGA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADwB,CACe;;EAE3C,MAAMO,OAAO,GAAGC,IAAI,IAAI;IACpB,IAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;MAAE;MACzC;IACH;;IAED,MAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB,CALoB,CAKe;EAClC,CANL;;EAQA,MAAMO,WAAW,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;IACtC,IAAG,CAACT,KAAK,CAACI,IAAP,IAAe,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;MACvC;IACP;;IACD,MAAMM,UAAU,GAAGC,EAAE,IAAI;MACrB,MAAMC,SAAS,GAAG,CAAC,GAAGZ,KAAJ,EAAWa,MAAX,CAAkBV,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAtC,CAAlB;MAEIV,QAAQ,CAACW,SAAD,CAAR;IAEH,CALL;;IAQQX,QAAQ,CAACK,QAAD,CAAR;IACAQ,OAAO,CAACC,GAAR,CAAYf,KAAZ;EACH,CAdL;;EAeA,MAAMgB,YAAY,GAAGL,EAAE,IAAI;IACvB,IAAIM,YAAY,GAAGpB,IAAI,CAACqB,GAAL,CAASf,IAAI,IAAI;MAChC,IAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAhB,EAAoB;QAChBR,IAAI,CAACgB,UAAL,GAAkB,CAAChB,IAAI,CAACgB,UAAxB;MACH;;MACD,OAAOhB,IAAP;IACH,CALkB,CAAnB;IAMIF,QAAQ,CAACgB,YAAD,CAAR;EAEP,CATD;;EAUI,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,QAAQ,EAAGf;IAArB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,IAAD;MAAM,KAAK,EAAEL,IAAb;MAAmB,YAAY,EAAEmB,YAAjC;MAA+C,UAAU,EACxDI;IADD;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CA5CD;;GAAMtB,Q;;KAAAA,Q;AA6CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}