{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Program0907\\\\OneDrive\\\\Desktop\\\\Coding Dojo\\\\MernStack\\\\React\\\\toDoApp\\\\react-todoapp\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm'; //create rfce react functional component to begin. \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeTodo,\n    _removeTodo,\n    updateTodo\n  } = _ref;\n  //what is this _remove; adding crud functionality to todo\n  const [edit, setEdit] = useState({\n    //creating empty todo\n    id: null,\n    value: '' //constructor\n\n  });\n\n  const submitUpdate = value => {\n    //update todo with new value\n    updateTodo(edit.id, value); //keeps edit.id as hidden input,and requires new value.\n\n    setEdit({\n      id: null,\n      value: \"\"\n    });\n  };\n\n  if (edit.id) {\n    //if we get a todo by id, issue an edit form and and process the update upon submission\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row' //validate for complete data integrity, todo rows are classes assigned based on complation state.\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => _removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Todo, \"2LHkp+Z7JPKb01+LZeIPnBsDnxs=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","RiCloseCircleLine","TiEdit","TodoForm","Todo","todos","completeTodo","_removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"sources":["C:/Users/Program0907/OneDrive/Desktop/Coding Dojo/MernStack/React/toDoApp/react-todoapp/src/components/Todo.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport{ RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\n//create rfce react functional component to begin. \r\n\r\nconst Todo = ({todos, completeTodo, _removeTodo, updateTodo}) => {  //what is this _remove; adding crud functionality to todo\r\n        const [edit, setEdit] = useState({  //creating empty todo\r\n        id: null,\r\n        value: ''      //constructor\r\n    });\r\n\r\nconst submitUpdate = value => {       //update todo with new value\r\n        updateTodo(edit.id, value);   //keeps edit.id as hidden input,and requires new value.\r\n        setEdit({\r\n            id: null,\r\n            value: \"\"\r\n    });\r\n};\r\n\r\n    if (edit.id) {                 //if we get a todo by id, issue an edit form and and process the update upon submission\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) =>  (\r\n        <div \r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}  //validate for complete data integrity, todo rows are classes assigned based on complation state.\r\n            key={index}   // we need a key for the map function\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine\r\n                onClick={() => _removeTodo(todo.id)}\r\n                className='delete-icon'\r\n                />\r\n                <TiEdit \r\n                    onClick={()  => setEdit({ id: todo.id, value: todo.text})} \r\n                    className='edit-icon'\r\n                />   \r\n            </div>\r\n        </div>\r\n    )); \r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAiC,gBAAjC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AAEA,MAAMC,IAAI,GAAG,QAAoD;EAAA;;EAAA,IAAnD;IAACC,KAAD;IAAQC,YAAR;IAAsBC,WAAtB;IAAmCC;EAAnC,CAAmD;EAAG;EAC5D,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;IAAG;IACpCW,EAAE,EAAE,IAD6B;IAEjCC,KAAK,EAAE,EAF0B,CAElB;;EAFkB,CAAD,CAAhC;;EAKR,MAAMC,YAAY,GAAGD,KAAK,IAAI;IAAQ;IAC9BJ,UAAU,CAACC,IAAI,CAACE,EAAN,EAAUC,KAAV,CAAV,CADsB,CACQ;;IAC9BF,OAAO,CAAC;MACJC,EAAE,EAAE,IADA;MAEJC,KAAK,EAAE;IAFH,CAAD,CAAP;EAIP,CAND;;EAQI,IAAIH,IAAI,CAACE,EAAT,EAAa;IAAkB;IAC3B,oBAAO,QAAC,QAAD;MAAU,IAAI,EAAEF,IAAhB;MAAsB,QAAQ,EAAEI;IAAhC;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,OAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;IACI,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UADvD,CACoE;IADpE;IAAA,wBAII;MAAmB,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;MAAA,UACKI,IAAI,CAACG;IADV,GAAUH,IAAI,CAACJ,EAAf;MAAA;MAAA;MAAA;IAAA,QAJJ,eAOI;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI,QAAC,iBAAD;QACA,OAAO,EAAE,MAAMJ,WAAW,CAACQ,IAAI,CAACJ,EAAN,CAD1B;QAEA,SAAS,EAAC;MAFV;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI,QAAC,MAAD;QACI,OAAO,EAAE,MAAOD,OAAO,CAAC;UAAEC,EAAE,EAAEI,IAAI,CAACJ,EAAX;UAAeC,KAAK,EAAEG,IAAI,CAACG;QAA3B,CAAD,CAD3B;QAEI,SAAS,EAAC;MAFd;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA,GAESF,KAFT;IAAA;IAAA;IAAA;EAAA,QADG,CAAP;AAoBH,CAtCD;;GAAMZ,I;;KAAAA,I;AAwCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}